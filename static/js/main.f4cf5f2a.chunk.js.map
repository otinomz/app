{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","placeholder","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6PAmBeA,EAhBA,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACrC,OACI,sBAAMC,UAAWC,IAAMC,OAAvB,UACI,6BAAKN,IACL,4BAAG,iCAAM,6CAAN,SACH,6BACKG,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,4BAAIR,IACJ,qBAAKG,UAAWC,IAAMH,MAAOQ,IAAKR,EAAOS,IAAI,SCiD1CC,MA3Df,WAEE,IAKA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAdf,WAce,oBAbd,qCAYG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAgBhB,OACE,sBAAKvB,UAAU,MAAf,UACE,oBAAIA,UAAU,MAAd,qCACA,mBAAGA,UAAU,MAAb,gDACA,gCACA,uBAAMwB,SAXQ,SAAAC,GAChBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAQmBb,UAAW,cAAtC,UACE,uBAAO2B,YAAY,sCAAsC3B,UAAU,aAAa4B,KAAK,OAAOC,MAAOjB,EAAQkB,SAhB5F,SAAAL,GACnBZ,EAAUY,EAAEM,OAAOF,UAgBf,wBAAQ7B,UAAU,gBAAgB4B,KAAK,SAAvC,uBAIF,qBAAK5B,UAAU,UAAf,SACGU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEEN,MAAOM,EAAOA,OAAO8B,MACrBnC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAO8B,mBCrChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.f4cf5f2a.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css'\r\n\r\nconst Recipe = ({title, calories, image, ingredients}) => {\r\n    return (\r\n        <div  className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <p><span><em>Ingredients</em> </span></p>\r\n            <ol>\r\n                {ingredients.map(ingredient=>(\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n            <p>{calories}</p>\r\n            <img className={style.image} src={image} alt=\"\" />\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Recipe;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Recipe from './Recipe'\n\nfunction App() {\n\n  const APP_ID = 'c458c83a'\n  const APP_KEY = 'c1bbf7192ccab38fe2f3cae38df456c3'\n\n  // const exampleReq = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${APP_KEY}`\n  \n  const [recipes, setRecipes] = useState([])\n  const [search, setSearch] = useState('')\n  const [query, setQuery] = useState('chicken')\n\n  useEffect(()=>{\n    getRecipes()\n  }, [query])\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n    const data = await response.json()\n    setRecipes(data.hits)\n  }\n\n  const updateSearch = e => {\n    setSearch(e.target.value)\n  }\n\n  const getSearch = e =>{\n    e.preventDefault()\n    setQuery(search)\n    setSearch(\"\")\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='nav'>Ingredients and Recipes</h1>\n      <p className=\"nav\">know what's in your favourite meal</p>\n      <div>\n      <form onSubmit={getSearch} className =\"search-form\">\n        <input placeholder='search for your favourite food item' className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}/>\n        <button className=\"search-button\" type='submit'>\n          search\n        </button>\n      </form>\n      <div className=\"recipes\">\n        {recipes.map(recipe =>(\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          \n          />\n        ))}  \n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__Du3k7\",\"image\":\"recipe_image__1y3Ng\"};"],"sourceRoot":""}